type Query {
  jobs: String!
}

type Mutation {
  obliterate: Boolean!
  createMessageQueues(accessToken: String!, queues: [CreateQueueDto!]!): Result!
  createCronJobs(accessToken: String!, jobs: [CreateCronJobDto!]!): CreateCronJobResult!
  enqueueMessage(accessToken: String!, queueName: String!, data: String!): Result!
}

enum Result {
  SUCCESS
  INACTIVE_SUBSCRIPTION
  INVALID_TOKEN
}

input CreateQueueDto {
  name: String!
  path: String!
}

enum CreateCronJobResult {
  SUCCESS
  INVALID_CRON_EXPRESSION
  INACTIVE_SUBSCRIPTION
  INVALID_TOKEN
}

input CreateCronJobDto {
  path: String!
  schedule: String!
}